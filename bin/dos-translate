#!/usr/bin/env node

var path = require('path');
var fs = require('fs');
var arrDiff = require('arr-diff');
var jsonFile = require('json-file-plus');

// Little hack to include `NODE_PATH=.`
require('node-path')(module, [path.resolve('.')]);

// Compile client application `./public/app.js` and `./public/app.css`
var config = require('lib/config');

var googleTranslate = require('google-translate')(config.googleAPIKey);

// Load the list of available languages.
var LANGS_FOLDER = 'lib/translations/lib'
var langs = fs.readdirSync(LANGS_FOLDER).map(function(v){
  return v.replace('.json', '');
});

function getLangPath(lang) {
  return path.join(LANGS_FOLDER, lang + '.json');
}

function getLang(lang) {
  return require(getLangPath(lang));
}


var opts = require('nomnom')
  .options({
    from: {
      abbr: 'f',
      help: 'Base language to use as reference.',
      required: true,
      choices: langs
    },
    to: {
      abbr: 't',
      help: 'Target language, will default to all the other languages.',
      list: true,
      choices: langs
    },
    'list-missing': {
      abbr: 'l',
      help: 'Shows a list of missing keys on the specified `--to` languages.',
      flag: true
    },
    'translate-missing': {
      abbr: 'm',
      help: 'Fill missing keys of `--to` using the translated values of `--from`.',
      flag: true
    }
  })
  .nom();

// Make `--to` param optional
if (!opts.to || !opts.to.length) {
  opts.to = langs.filter(function(v){ return v !== opts.from; })
}


if (opts['list-missing']) {
  var fromKeys = Object.keys(getLang(opts.from));

  opts.to.forEach(function(lang){
    var toKeys = Object.keys(getLang(lang));
    var missing = arrDiff(fromKeys, toKeys);

    if (!missing.length) return;

    console.log('Missing ' + missing.length + ' keys on `' + lang + '`:');

    missing.forEach(function(k){
      console.log('  - ' + k);
    });
  });
}


if (opts['translate-missing']) {
  var fromLang = getLang(opts.from);
  var fromKeys = Object.keys(fromLang);

  opts.to.forEach(function(lang){
    var toKeys = Object.keys(getLang(lang));
    var missing = arrDiff(fromKeys, toKeys);

    if (!missing.length) return;

    console.log('Translating ' + missing.length + ' missing keys on `' + lang + '`:');

    jsonFile(getLangPath(lang), function(err, file) {
      if (err) return console.error(err);

      missing.forEach(function(k){
        googleTranslate.translate(fromLang[k], opts.from, lang, function(err, translation){
          if( err ) return console.error(err);

          var t = {};
          t[k] = translation.translatedText;
          file.set(t);

          file.save().then(function() {
            console.log('  "' + k + '": "' + translation.translatedText + '"');
          }).catch(function (err) {
            console.error(err);
          });
        });
      });

    });
  });
}
